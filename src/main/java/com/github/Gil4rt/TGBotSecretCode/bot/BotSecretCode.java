package com.github.Gil4rt.TGBotSecretCode.bot;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Component
public class BotSecretCode extends TelegramLongPollingBot {

    Database db = new Database();

    private boolean waitSecretAnswer;

    @Value("${bot.username}")
    private String username;

    @Value("${bot.token}")
    private String token;

    @Override
    public void onUpdateReceived(Update update) {

        String message_text = update.getMessage().getText();
        String chatId = update.getMessage().getChatId().toString();

        long getUserId = update.getMessage().getChatId();

        long adminId = db.getAdminId();

        if (update.getMessage().getText().equals("/start")) {
            SendMessage message = new SendMessage();

            if (getUserId == adminId) {
                adminPanelShow(chatId, message);
            } else {
                message.setChatId(chatId);
                message.setText("\uD83D\uDEAB –ü—Ä–æ—Ö–æ–¥ –∑–∞–∫—Ä—ã—Ç, –±–µ–∑ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ –ø—É—Å—Ç–∏–º \uD83D\uDEAB");

                ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
                List<KeyboardRow> keyboard = new ArrayList<>();
                KeyboardRow row = new KeyboardRow();
                row.add("–°–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ \uD83C\uDF81:");
                keyboard.add(row);
                keyboardMarkup.setKeyboard(keyboard);
                message.setReplyMarkup(keyboardMarkup);
                waitSecretAnswer = true;
                try {
                    execute(message);
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
            }
        } else if (update.getMessage().getText().equals("–ò–∑–º–µ–Ω–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ \uD83E\uDD2B") && getUserId == adminId) {

            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.enableHtml(true);
            message.setText("–¢–µ–∫—É—â–µ–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ \uD83E\uDD77: \r\n \r\n " + "<b>" + db.getSecretWord() + "</b>" + "\r\n \r\n" + "–ö–∞–∫–æ–µ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º? ‚úíÔ∏è");
            try {
                execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }
            waitSecretAnswer = true;

        } else if (waitSecretAnswer && getUserId == adminId) {
            waitSecretAnswer = false;
            db.saveSecretWord(message_text);
            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.enableHtml(true);
            message.setText("–ù–æ–≤–æ–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ: \uD83D\uDC69\u200D\uD83C\uDFA8: \r\n \r\n " + "<b>" + db.getSecretWord() + "</b>" );
            try {
                execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }
            try {
                db.updateDatabase();
                db.parseDataToDb();
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

        }
        else if (update.getMessage().getText().equals("–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É \uD83D\uDCCA") && getUserId == adminId) {

            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.setText("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ª–æ–≤–∞ \uD83D\uDDE3: \r\n\r\n 1Ô∏è‚É£ –í–≤–æ–¥ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Å–ª–æ–≤–∞ " +
                    "\uD83D\uDC69\u200D\uD83D\uDCBB: " + db.getStatsAnyWord() +
                    "\r\n 2Ô∏è‚É£ –í–≤–æ–¥ –≤–µ—Ä–Ω–æ–≥–æ —Å–ª–æ–≤–∞ \uD83D\uDC81\u200D‚ôÄÔ∏è: " + db.getStatsSayedSecretWord()
                    + "\r\n 3Ô∏è‚É£ –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É ‚õπÔ∏è\u200D‚ôÄÔ∏è: " + db.getStatsJoinedGroup());
            try {
                execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }
        }
        else if (update.getMessage().getText().equals("–°–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ \uD83C\uDF81:")) {

        }
        else if (waitSecretAnswer) {

            waitSecretAnswer = false;
            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            if(message_text.equals(db.getSecretWord())) {
                message.setText("–¢—ã –ª—É—á—à–∏–π ‚ù§Ô∏è, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ \uD83E\uDD1D, –º—ã –±–∞–Ω–¥–∞ \uD83D\uDE0E \r\n " +
                        "–°—Å—ã–ª–æ—á–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É: https://t.me/testirovanie12345Blin ");
                db.saveStatsSayedSecretWord();
            }
            else{
                message.setText("–°–ª–æ–≤–æ –Ω–µ –≤–µ—Ä–Ω–æ–µ üò≠ \r\n –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é");
                db.saveStatsAnyWord();
            }

            try {
                execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }

            try {
                db.updateDatabase();
                db.parseDataToDb();
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

        }
        else {
            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.setText("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ \uD83D\uDE4B\u200D‚ôÄÔ∏è");
            try {
                execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }
        }
    }

    public void adminPanelShow(String chatId, SendMessage message) {
        message.setChatId(chatId);
        message.setText("–ü—Ä–∏–≤–µ—Ç –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! \uD83D\uDE0E ");

        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row = new KeyboardRow();
        row.add("–ò–∑–º–µ–Ω–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ \uD83E\uDD2B");
        keyboard.add(row);
        row = new KeyboardRow();
        row.add("–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É \uD83D\uDCCA");
        keyboard.add(row);
        keyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(keyboardMarkup);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return username;
    }

    @Override
    public String getBotToken() {

        try {
            db.createDatabaseAndParse();
            db.parseDataToDb();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        return token;
    }
}